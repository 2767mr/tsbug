/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TranslationDto } from "./TranslationDto";
import { TranslationDtoFromJSON, TranslationDtoToJSON } from "./TranslationDto";

/**
 *
 * @export
 * @interface UpdateLimeDto
 */
export interface UpdateLimeDto {
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  AppleId: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof UpdateLimeDto
   */
  name: TranslationDto;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  zyklusId: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  LimeFormatId: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  indexId?: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  laenge: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  comma?: number;
  /**
   *
   * @type {string}
   * @memberof UpdateLimeDto
   */
  minWert?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateLimeDto
   */
  maxWert?: string;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  faktor?: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  offset?: number;
  /**
   *
   * @type {number}
   * @memberof UpdateLimeDto
   */
  einheitId: number;
  /**
   *
   * @type {boolean}
   * @memberof UpdateLimeDto
   */
  freigabe: boolean;
}

/**
 * Check if a given object implements the UpdateLimeDto interface.
 */
export function instanceOfUpdateLimeDto(value: object): boolean {
  if (!("AppleId" in value)) return false;
  if (!("name" in value)) return false;
  if (!("zyklusId" in value)) return false;
  if (!("LimeFormatId" in value)) return false;
  if (!("laenge" in value)) return false;
  if (!("einheitId" in value)) return false;
  if (!("freigabe" in value)) return false;
  return true;
}

export function UpdateLimeDtoFromJSON(json: any): UpdateLimeDto {
  return UpdateLimeDtoFromJSONTyped(json, false);
}

export function UpdateLimeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UpdateLimeDto {
  if (json == null) {
    return json;
  }
  return {
    AppleId: json["AppleId"],
    name: TranslationDtoFromJSON(json["name"]),
    zyklusId: json["zyklusId"],
    LimeFormatId: json["LimeFormatId"],
    indexId: json["indexId"] == null ? undefined : json["indexId"],
    laenge: json["laenge"],
    comma: json["comma"] == null ? undefined : json["comma"],
    minWert: json["minWert"] == null ? undefined : json["minWert"],
    maxWert: json["maxWert"] == null ? undefined : json["maxWert"],
    faktor: json["faktor"] == null ? undefined : json["faktor"],
    offset: json["offset"] == null ? undefined : json["offset"],
    einheitId: json["einheitId"],
    freigabe: json["freigabe"],
  };
}

export function UpdateLimeDtoToJSON(value?: UpdateLimeDto | null): any {
  if (value == null) {
    return value;
  }
  return {
    AppleId: value["AppleId"],
    name: TranslationDtoToJSON(value["name"]),
    zyklusId: value["zyklusId"],
    LimeFormatId: value["LimeFormatId"],
    indexId: value["indexId"],
    laenge: value["laenge"],
    comma: value["comma"],
    minWert: value["minWert"],
    maxWert: value["maxWert"],
    faktor: value["faktor"],
    offset: value["offset"],
    einheitId: value["einheitId"],
    freigabe: value["freigabe"],
  };
}
