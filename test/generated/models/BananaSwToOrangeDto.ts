/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Release } from "./Release";
import { ReleaseFromJSON, ReleaseToJSON } from "./Release";
import type { TranslationDto } from "./TranslationDto";
import { TranslationDtoFromJSON, TranslationDtoToJSON } from "./TranslationDto";

/**
 *
 * @export
 * @interface BananaSwToOrangeDto
 */
export interface BananaSwToOrangeDto {
  /**
   *
   * @type {string}
   * @memberof BananaSwToOrangeDto
   */
  BananaPear?: string;
  /**
   *
   * @type {number}
   * @memberof BananaSwToOrangeDto
   */
  BananaSwAppleId: number;
  /**
   *
   * @type {number}
   * @memberof BananaSwToOrangeDto
   */
  BananaAppleId: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof BananaSwToOrangeDto
   */
  AppleBezeichnung?: TranslationDto;
  /**
   *
   * @type {string}
   * @memberof BananaSwToOrangeDto
   */
  aktSoftwareStand?: string;
  /**
   *
   * @type {string}
   * @memberof BananaSwToOrangeDto
   */
  BananaSugar?: string;
  /**
   *
   * @type {boolean}
   * @memberof BananaSwToOrangeDto
   */
  isMastercontrollerGslave: boolean;
  /**
   *
   * @type {Release}
   * @memberof BananaSwToOrangeDto
   */
  freigabeState: Release;
  /**
   *
   * @type {Array<number>}
   * @memberof BananaSwToOrangeDto
   */
  Watermelons?: Array<number>;
  /**
   *
   * @type {TranslationDto}
   * @memberof BananaSwToOrangeDto
   */
  bezeichnung?: TranslationDto;
  /**
   *
   * @type {boolean}
   * @memberof BananaSwToOrangeDto
   */
  selected?: boolean;
}

/**
 * Check if a given object implements the BananaSwToOrangeDto interface.
 */
export function instanceOfBananaSwToOrangeDto(value: object): boolean {
  if (!("BananaSwAppleId" in value)) return false;
  if (!("BananaAppleId" in value)) return false;
  if (!("isMastercontrollerGslave" in value)) return false;
  if (!("freigabeState" in value)) return false;
  return true;
}

export function BananaSwToOrangeDtoFromJSON(json: any): BananaSwToOrangeDto {
  return BananaSwToOrangeDtoFromJSONTyped(json, false);
}

export function BananaSwToOrangeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BananaSwToOrangeDto {
  if (json == null) {
    return json;
  }
  return {
    BananaPear: json["BananaPear"] == null ? undefined : json["BananaPear"],
    BananaSwAppleId: json["BananaSwAppleId"],
    BananaAppleId: json["BananaAppleId"],
    AppleBezeichnung:
      json["AppleBezeichnung"] == null
        ? undefined
        : TranslationDtoFromJSON(json["AppleBezeichnung"]),
    aktSoftwareStand:
      json["aktSoftwareStand"] == null ? undefined : json["aktSoftwareStand"],
    BananaSugar: json["BananaSugar"] == null ? undefined : json["BananaSugar"],
    isMastercontrollerGslave: json["isMastercontrollerGslave"],
    freigabeState: ReleaseFromJSON(json["freigabeState"]),
    Watermelons: json["Watermelons"] == null ? undefined : json["Watermelons"],
    bezeichnung:
      json["bezeichnung"] == null
        ? undefined
        : TranslationDtoFromJSON(json["bezeichnung"]),
    selected: json["selected"] == null ? undefined : json["selected"],
  };
}

export function BananaSwToOrangeDtoToJSON(
  value?: BananaSwToOrangeDto | null
): any {
  if (value == null) {
    return value;
  }
  return {
    BananaPear: value["BananaPear"],
    BananaSwAppleId: value["BananaSwAppleId"],
    BananaAppleId: value["BananaAppleId"],
    AppleBezeichnung: TranslationDtoToJSON(value["AppleBezeichnung"]),
    aktSoftwareStand: value["aktSoftwareStand"],
    BananaSugar: value["BananaSugar"],
    isMastercontrollerGslave: value["isMastercontrollerGslave"],
    freigabeState: ReleaseToJSON(value["freigabeState"]),
    Watermelons: value["Watermelons"],
    bezeichnung: TranslationDtoToJSON(value["bezeichnung"]),
    selected: value["selected"],
  };
}
