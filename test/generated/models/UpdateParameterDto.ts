/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TranslationDto } from "./TranslationDto";
import { TranslationDtoFromJSON, TranslationDtoToJSON } from "./TranslationDto";
import type { UpdateLycheeParameterDto } from "./UpdateLycheeParameterDto";
import {
  UpdateLycheeParameterDtoFromJSON,
  UpdateLycheeParameterDtoToJSON,
} from "./UpdateLycheeParameterDto";

/**
 *
 * @export
 * @interface UpdateParameterDto
 */
export interface UpdateParameterDto {
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  parameterCodeId: number;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  parameterCode: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof UpdateParameterDto
   */
  bezeichnung?: TranslationDto;
  /**
   *
   * @type {string}
   * @memberof UpdateParameterDto
   */
  parameterWert?: string;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  parameterMin?: number;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  parameterMax?: number;
  /**
   *
   * @type {boolean}
   * @memberof UpdateParameterDto
   */
  LycheeParameter: boolean;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  LycheeAnzahl?: number;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  einheitId?: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof UpdateParameterDto
   */
  bemerkung?: TranslationDto;
  /**
   *
   * @type {boolean}
   * @memberof UpdateParameterDto
   */
  entwicklerParameter: boolean;
  /**
   *
   * @type {boolean}
   * @memberof UpdateParameterDto
   */
  freigegeben: boolean;
  /**
   *
   * @type {number}
   * @memberof UpdateParameterDto
   */
  position: number;
  /**
   *
   * @type {Array<UpdateLycheeParameterDto>}
   * @memberof UpdateParameterDto
   */
  LycheeParameters?: Array<UpdateLycheeParameterDto>;
}

/**
 * Check if a given object implements the UpdateParameterDto interface.
 */
export function instanceOfUpdateParameterDto(value: object): boolean {
  if (!("parameterCodeId" in value)) return false;
  if (!("parameterCode" in value)) return false;
  if (!("LycheeParameter" in value)) return false;
  if (!("entwicklerParameter" in value)) return false;
  if (!("freigegeben" in value)) return false;
  if (!("position" in value)) return false;
  return true;
}

export function UpdateParameterDtoFromJSON(json: any): UpdateParameterDto {
  return UpdateParameterDtoFromJSONTyped(json, false);
}

export function UpdateParameterDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UpdateParameterDto {
  if (json == null) {
    return json;
  }
  return {
    parameterCodeId: json["parameterCodeId"],
    parameterCode: json["parameterCode"],
    bezeichnung:
      json["bezeichnung"] == null
        ? undefined
        : TranslationDtoFromJSON(json["bezeichnung"]),
    parameterWert:
      json["parameterWert"] == null ? undefined : json["parameterWert"],
    parameterMin:
      json["parameterMin"] == null ? undefined : json["parameterMin"],
    parameterMax:
      json["parameterMax"] == null ? undefined : json["parameterMax"],
    LycheeParameter: json["LycheeParameter"],
    LycheeAnzahl:
      json["LycheeAnzahl"] == null ? undefined : json["LycheeAnzahl"],
    einheitId: json["einheitId"] == null ? undefined : json["einheitId"],
    bemerkung:
      json["bemerkung"] == null
        ? undefined
        : TranslationDtoFromJSON(json["bemerkung"]),
    entwicklerParameter: json["entwicklerParameter"],
    freigegeben: json["freigegeben"],
    position: json["position"],
    LycheeParameters:
      json["LycheeParameters"] == null
        ? undefined
        : (json["LycheeParameters"] as Array<any>).map(
            UpdateLycheeParameterDtoFromJSON
          ),
  };
}

export function UpdateParameterDtoToJSON(
  value?: UpdateParameterDto | null
): any {
  if (value == null) {
    return value;
  }
  return {
    parameterCodeId: value["parameterCodeId"],
    parameterCode: value["parameterCode"],
    bezeichnung: TranslationDtoToJSON(value["bezeichnung"]),
    parameterWert: value["parameterWert"],
    parameterMin: value["parameterMin"],
    parameterMax: value["parameterMax"],
    LycheeParameter: value["LycheeParameter"],
    LycheeAnzahl: value["LycheeAnzahl"],
    einheitId: value["einheitId"],
    bemerkung: TranslationDtoToJSON(value["bemerkung"]),
    entwicklerParameter: value["entwicklerParameter"],
    freigegeben: value["freigegeben"],
    position: value["position"],
    LycheeParameters:
      value["LycheeParameters"] == null
        ? undefined
        : (value["LycheeParameters"] as Array<any>).map(
            UpdateLycheeParameterDtoToJSON
          ),
  };
}
