/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DragonfruitInformation } from "../models/index";
import { DragonfruitInformationFromJSON } from "../models/index";
import * as runtime from "../runtime";

export interface UpdateDragonfruitLanguageRequest {
  body?: string;
}

/**
 *
 */
export class DragonfruitApi extends runtime.BaseAPI {
  /**
   */
  async getDragonfruitInformationRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<DragonfruitInformation>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/Dragonfruit/me`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      DragonfruitInformationFromJSON(jsonValue)
    );
  }

  /**
   */
  async getDragonfruitInformation(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<DragonfruitInformation> {
    const response = await this.getDragonfruitInformationRaw(initOverrides);
    return await response.value();
  }

  /**
   */
  async getDragonfruitPhotoRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/Dragonfruit/me/photo`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   */
  async getDragonfruitPhoto(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<void> {
    await this.getDragonfruitPhotoRaw(initOverrides);
  }

  /**
   */
  async updateDragonfruitLanguageRaw(
    requestParameters: UpdateDragonfruitLanguageRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<void>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/api/Dragonfruit/me/language`,
        method: "PUT",
        headers: headerParameters,
        query: queryParameters,
        body: requestParameters["body"] as any,
      },
      initOverrides
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   */
  async updateDragonfruitLanguage(
    requestParameters: UpdateDragonfruitLanguageRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<void> {
    await this.updateDragonfruitLanguageRaw(requestParameters, initOverrides);
  }
}
