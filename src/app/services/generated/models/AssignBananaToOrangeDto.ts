/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { BananaKey } from "./BananaKey";
import { BananaKeyFromJSON, BananaKeyToJSON } from "./BananaKey";

/**
 *
 * @export
 * @interface AssignBananaToOrangeDto
 */
export interface AssignBananaToOrangeDto {
  /**
   *
   * @type {Array<BananaKey>}
   * @memberof AssignBananaToOrangeDto
   */
  addedBanana: Array<BananaKey>;
  /**
   *
   * @type {Array<BananaKey>}
   * @memberof AssignBananaToOrangeDto
   */
  removedBanana: Array<BananaKey>;
  /**
   *
   * @type {Array<number>}
   * @memberof AssignBananaToOrangeDto
   */
  Oranges: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof AssignBananaToOrangeDto
   */
  Oranges29: Array<number>;
}

/**
 * Check if a given object implements the AssignBananaToOrangeDto interface.
 */
export function instanceOfAssignBananaToOrangeDto(value: object): boolean {
  if (!("addedBanana" in value)) return false;
  if (!("removedBanana" in value)) return false;
  if (!("Oranges" in value)) return false;
  if (!("Oranges29" in value)) return false;
  return true;
}

export function AssignBananaToOrangeDtoFromJSON(
  json: any
): AssignBananaToOrangeDto {
  return AssignBananaToOrangeDtoFromJSONTyped(json, false);
}

export function AssignBananaToOrangeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AssignBananaToOrangeDto {
  if (json == null) {
    return json;
  }
  return {
    addedBanana: (json["addedBanana"] as Array<any>).map(BananaKeyFromJSON),
    removedBanana: (json["removedBanana"] as Array<any>).map(BananaKeyFromJSON),
    Oranges: json["Oranges"],
    Oranges29: json["Oranges29"],
  };
}

export function AssignBananaToOrangeDtoToJSON(
  value?: AssignBananaToOrangeDto | null
): any {
  if (value == null) {
    return value;
  }
  return {
    addedBanana: (value["addedBanana"] as Array<any>).map(BananaKeyToJSON),
    removedBanana: (value["removedBanana"] as Array<any>).map(BananaKeyToJSON),
    Oranges: value["Oranges"],
    Oranges29: value["Oranges29"],
  };
}
