/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Modus } from "./Modus";
import { ModusFromJSON, ModusToJSON } from "./Modus";
import type { TranslationDto } from "./TranslationDto";
import { TranslationDtoFromJSON, TranslationDtoToJSON } from "./TranslationDto";

/**
 *
 * @export
 * @interface IdentifierDto
 */
export interface IdentifierDto {
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  AppleId: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof IdentifierDto
   */
  Apple?: TranslationDto;
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  knotennummer: number;
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  identifierId: number;
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  pdo: number;
  /**
   *
   * @type {Modus}
   * @memberof IdentifierDto
   */
  pdoModus: Modus;
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  pdoId: number;
  /**
   *
   * @type {number}
   * @memberof IdentifierDto
   */
  identifier: number;
}

/**
 * Check if a given object implements the IdentifierDto interface.
 */
export function instanceOfIdentifierDto(value: object): boolean {
  if (!("AppleId" in value)) return false;
  if (!("knotennummer" in value)) return false;
  if (!("identifierId" in value)) return false;
  if (!("pdo" in value)) return false;
  if (!("pdoModus" in value)) return false;
  if (!("pdoId" in value)) return false;
  if (!("identifier" in value)) return false;
  return true;
}

export function IdentifierDtoFromJSON(json: any): IdentifierDto {
  return IdentifierDtoFromJSONTyped(json, false);
}

export function IdentifierDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IdentifierDto {
  if (json == null) {
    return json;
  }
  return {
    AppleId: json["AppleId"],
    Apple:
      json["Apple"] == null ? undefined : TranslationDtoFromJSON(json["Apple"]),
    knotennummer: json["knotennummer"],
    identifierId: json["identifierId"],
    pdo: json["pdo"],
    pdoModus: ModusFromJSON(json["pdoModus"]),
    pdoId: json["pdoId"],
    identifier: json["identifier"],
  };
}

export function IdentifierDtoToJSON(value?: IdentifierDto | null): any {
  if (value == null) {
    return value;
  }
  return {
    AppleId: value["AppleId"],
    Apple: TranslationDtoToJSON(value["Apple"]),
    knotennummer: value["knotennummer"],
    identifierId: value["identifierId"],
    pdo: value["pdo"],
    pdoModus: ModusToJSON(value["pdoModus"]),
    pdoId: value["pdoId"],
    identifier: value["identifier"],
  };
}
