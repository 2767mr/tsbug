/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TranslationDto } from "./TranslationDto";
import { TranslationDtoFromJSON, TranslationDtoToJSON } from "./TranslationDto";

/**
 *
 * @export
 * @interface CreateOrangeDto
 */
export interface CreateOrangeDto {
  /**
   *
   * @type {number}
   * @memberof CreateOrangeDto
   */
  Lychees: number;
  /**
   *
   * @type {number}
   * @memberof CreateOrangeDto
   */
  code: number;
  /**
   *
   * @type {TranslationDto}
   * @memberof CreateOrangeDto
   */
  name: TranslationDto;
  /**
   *
   * @type {boolean}
   * @memberof CreateOrangeDto
   */
  analogEingang: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CreateOrangeDto
   */
  analogAusgang: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CreateOrangeDto
   */
  digitalEingang: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CreateOrangeDto
   */
  digitalAusgang: boolean;
  /**
   *
   * @type {number}
   * @memberof CreateOrangeDto
   */
  styleId?: number;
  /**
   *
   * @type {number}
   * @memberof CreateOrangeDto
   */
  modusId?: number;
}

/**
 * Check if a given object implements the CreateOrangeDto interface.
 */
export function instanceOfCreateOrangeDto(value: object): boolean {
  if (!("Lychees" in value)) return false;
  if (!("code" in value)) return false;
  if (!("name" in value)) return false;
  if (!("analogEingang" in value)) return false;
  if (!("analogAusgang" in value)) return false;
  if (!("digitalEingang" in value)) return false;
  if (!("digitalAusgang" in value)) return false;
  return true;
}

export function CreateOrangeDtoFromJSON(json: any): CreateOrangeDto {
  return CreateOrangeDtoFromJSONTyped(json, false);
}

export function CreateOrangeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): CreateOrangeDto {
  if (json == null) {
    return json;
  }
  return {
    Lychees: json["Lychees"],
    code: json["code"],
    name: TranslationDtoFromJSON(json["name"]),
    analogEingang: json["analogEingang"],
    analogAusgang: json["analogAusgang"],
    digitalEingang: json["digitalEingang"],
    digitalAusgang: json["digitalAusgang"],
    styleId: json["styleId"] == null ? undefined : json["styleId"],
    modusId: json["modusId"] == null ? undefined : json["modusId"],
  };
}

export function CreateOrangeDtoToJSON(value?: CreateOrangeDto | null): any {
  if (value == null) {
    return value;
  }
  return {
    Lychees: value["Lychees"],
    code: value["code"],
    name: TranslationDtoToJSON(value["name"]),
    analogEingang: value["analogEingang"],
    analogAusgang: value["analogAusgang"],
    digitalEingang: value["digitalEingang"],
    digitalAusgang: value["digitalAusgang"],
    styleId: value["styleId"],
    modusId: value["modusId"],
  };
}
