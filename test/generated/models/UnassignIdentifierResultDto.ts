/* tslint:disable */
/* eslint-disable */
/**
 * Cranberry.WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AssignedOrange } from "./AssignedOrange";
import { AssignedOrangeFromJSON, AssignedOrangeToJSON } from "./AssignedOrange";

/**
 *
 * @export
 * @interface UnassignIdentifierResultDto
 */
export interface UnassignIdentifierResultDto {
  /**
   *
   * @type {boolean}
   * @memberof UnassignIdentifierResultDto
   */
  success: boolean;
  /**
   *
   * @type {Array<AssignedOrange>}
   * @memberof UnassignIdentifierResultDto
   */
  assignedOranges29?: Array<AssignedOrange>;
  /**
   *
   * @type {Array<AssignedOrange>}
   * @memberof UnassignIdentifierResultDto
   */
  assignedOranges?: Array<AssignedOrange>;
}

/**
 * Check if a given object implements the UnassignIdentifierResultDto interface.
 */
export function instanceOfUnassignIdentifierResultDto(value: object): boolean {
  if (!("success" in value)) return false;
  return true;
}

export function UnassignIdentifierResultDtoFromJSON(
  json: any
): UnassignIdentifierResultDto {
  return UnassignIdentifierResultDtoFromJSONTyped(json, false);
}

export function UnassignIdentifierResultDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UnassignIdentifierResultDto {
  if (json == null) {
    return json;
  }
  return {
    success: json["success"],
    assignedOranges29:
      json["assignedOranges29"] == null
        ? undefined
        : (json["assignedOranges29"] as Array<any>).map(AssignedOrangeFromJSON),
    assignedOranges:
      json["assignedOranges"] == null
        ? undefined
        : (json["assignedOranges"] as Array<any>).map(AssignedOrangeFromJSON),
  };
}

export function UnassignIdentifierResultDtoToJSON(
  value?: UnassignIdentifierResultDto | null
): any {
  if (value == null) {
    return value;
  }
  return {
    success: value["success"],
    assignedOranges29:
      value["assignedOranges29"] == null
        ? undefined
        : (value["assignedOranges29"] as Array<any>).map(AssignedOrangeToJSON),
    assignedOranges:
      value["assignedOranges"] == null
        ? undefined
        : (value["assignedOranges"] as Array<any>).map(AssignedOrangeToJSON),
  };
}
